# Paths
export PATH="$HOME/.bin:$HOME/.bash/bin:$PATH"
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# Enable auto-completion
autoload -Uz compinit
compinit

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
export PATH="$PATH:$HOME/.rvm/bin"

# Node/NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                   # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion

# Python
if type "pyenv" >/dev/null; then
  export PATH=$(pyenv root)/shims:$PATH
  export PYENV_ROOT="$HOME/.pyenv"
  eval "$(pyenv init -)"
fi

if [[ -s '/etc/zsh_command_not_found' ]]; then
  source '/etc/zsh_command_not_found'
fi

# Colours
set -g default-terminal "xterm-256color"

export CLICOLOR='true'
export LSCOLORS="gxfxcxdxbxegedabagacad"

# HSTR configuration - add this to ~/.zshrc
alias hh=hstr          # hh to be alias for hstr
setopt histignorespace # skip cmds w/ leading space from history
hstr_no_tiocsti() {
  zle -I
  { HSTR_OUT="$({ hstr </dev/tty ${BUFFER}; } 2>&1 1>&3 3>&-)"; } 3>&1
  BUFFER="${HSTR_OUT}"
  CURSOR=${#BUFFER}
  zle redisplay
}
zle -N hstr_no_tiocsti
bindkey '\C-r' hstr_no_tiocsti
export HSTR_TIOCSTI=n

# HSTR customisations
export HSTR_CONFIG=raw-history-view,hicolor # get more colors
export HISTFILE=~/.zsh_history              # ensure history file visibility
export HISTSIZE=1000
export SAVEHIST=1000
setopt SHARE_HISTORY

# Exports/keys
EDITOR='vim'
#EDITOR='nano'
#EDITOR='micro'
export EDITOR
alias edit="$EDITOR"

export THEFUCK_RULES='DEFAULT_RULES:git_push_force'
export LANGUAGE="en_GB.UTF-8"

# cd without cd
setopt auto_cd
# Case insensitive matching
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'r:|=*' 'l:|=* r:|=*'

bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line
bindkey "^[[3~" delete-char
bindkey "^F" forward-word
bindkey "^B" backward-word

if [[ "$TERM_PROGRAM" == "vscode" ]]; then
  bindkey "^A" beginning-of-line
  bindkey "^E" end-of-line
fi
