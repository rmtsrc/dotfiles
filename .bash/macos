# MacOS
export PATH="/usr/local/sbin:/usr/local/bin:/opt/homebrew/opt/coreutils/libexec/gnubin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:/opt/homebrew/opt/gpg-agent/libexec:$HOME/.rd/bin:$PATH:$HOME/bin:$HOME/.bash/bin"
MANPATH="/opt/homebrew/opt/gnu-sed/libexec/gnuman:$MANPATH"

eval "$(/opt/homebrew/bin/brew shellenv)"

if [[ -f "${HOME}/.iterm2_shell_integration.zsh" && "$TERM_PROGRAM" == "iTerm.app" ]]; then
  source "${HOME}/.iterm2_shell_integration.zsh"
fi

export HOMEBREW_NO_ANALYTICS=1

alias docker-start="colima start"
alias notify="osascript -e 'display notification \"Done!\" with title \"iTerm\"'"

# Updates, Homebrew & Cask
alias update='brew-up'
alias brew-up='brew update && brew upgrade && brew upgrade --cask && brew cleanup'
alias mac-up='sudo softwareupdate --install --all'
alias brew-export="brew bundle dump --force --file=$BREW_FILE"
alias brew-import="brew bundle install --file=$BREW_FILE"
alias brew-import-cleanup="brew bundle cleanup --file=$BREW_FILE"

# App links
#alias vi="/usr/bin/vim"
#alias vim="/usr/local/bin/mvim"
alias ack='ACK_PAGER_COLOR="less -x4SRFX" /usr/local/bin/ack'
alias gitx="open /opt/homebrew-cask/Caskroom/ssp-gitx/0.12/GitX.app --args $(pwd)"
alias firefox-profile="/Applications/Firefox.app/Contents/MacOS/firefox -profilemanager"
alias vlc="/Applications/VLC.app/Contents/MacOS/VLC"
alias tailscale="/Applications/Tailscale.app/Contents/MacOS/Tailscale"
alias disk-usage="GSETTINGS_SCHEMA_DIR=/opt/homebrew/share/glib-2.0/schemas/ baobab"

alias keyboard-laptop="open -g hammerspoon://setKeyboardLayoutBritish"
alias keyboard-ext="open -g hammerspoon://setKeyboardLayoutBritishPC"

# Google Cloud SDK
#source "/opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
#source "/opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"

# Android
export ANDROID_SDK_ROOT=$HOME/Library/Android/sdk
source ~/.bash/android

# rm to trash
rm() {
  local args=()

  # Filter out rm flags like -r, -f, -Rf, etc.
  for arg in "$@"; do
    if [[ "$arg" != -* ]]; then
      args+=("$arg")
    fi
  done

  if [ ${#args[@]} -eq 0 ]; then
    echo "rm: missing operand"
    return 1
  fi

  trash "${args[@]}"
}

# GPG
gpg_init() {
  if ! pgrep -x "gpg-agent" >/dev/null; then
    eval $(gpg-agent --daemon)
  fi
}
gpg_init

# Add the following to your shell init to set up gpg-agent automatically for every shell
export KEYGRIP=$(gpg --fingerprint --fingerprint | grep fingerprint | tail -1 | cut -d= -f2 | sed -e 's/ //g')

# ssh
if ssh-add -l | grep -q 'no identities'; then
  for KEY in $(ls $HOME/.ssh/id_ed25519* | grep -v \.pub); do
    ssh-add --apple-use-keychain ${KEY} &>/dev/null
  done
fi
